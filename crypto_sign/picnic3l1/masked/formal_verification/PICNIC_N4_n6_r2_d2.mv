(* Multiplication-based refresh *)
proc REFM:
 inputs: x[0:2]
 outputs: y[0:2]
 randoms: r01, r02, r12;
  y[0] := x[0];
  y[1] := x[1];
  y[2] := x[2];
  y[0] := y[0] + r01;
  y[1] := y[1] + r01;
  y[0] := y[0] + r02;
  y[2] := y[2] + r02;
  y[1] := y[1] + r12;
  y[2] := y[2] + r12;
end

(* SNI secure AND *)
proc AND:
 inputs: a[0:2], b[0:2]
 outputs: c[0:2]
 randoms: r01, r02, r12;
  c[0] := a[0] * b[0];
  c[1] := a[1] * b[1];
  c[2] := a[2] * b[2];
  c[0] := c[0] + r01;
  a0_b1 := a[0] * b[1];
  a1_b0 := a[1] * b[0];
  r10 := a0_b1 + r01;
  r10 := r10   + a1_b0;
  c[1] := c[1] + r10;
  c[0] := c[0] + r02;
  a0_b2 := a[0] * b[2];
  a2_b0 := a[2] * b[0];
  r20 := a0_b2 + r02;
  r20 := r20   + a2_b0;
  c[2] := c[2] + r20;
  c[1] := c[1] + r12;
  a1_b2 := a[1] * b[2];
  a2_b1 := a[2] * b[1];
  r21 := a1_b2 + r12;
  r21 := r21   + a2_b1;
  c[2] := c[2] + r21;
end

(* Compute parity of N shares*)
proc PARITY_N:
  inputs: in1_[0:2],in2_[0:2],in3_[0:2],in4_[0:2]
  outputs: out[0:2];
  out := in1_ + in2_;
  out := out + in3_;
  out := out + in4_;
end

(* Compute parity of N-1 shares*)
proc PARITY_Nm1:
  inputs: in1_[0:2],in2_[0:2],in3_[0:2]
  outputs: out[0:2];
  out := in1_ + in2_;
  out := out + in3_;
end

(* Affine layer gadget *)
proc AFFINE:
  inputs: st1_[0:2],st2_[0:2],st3_[0:2],st4_[0:2],st5_[0:2],st6_[0:2]
  outputs: a1_[0:2],a2_[0:2],a3_[0:2],a4_[0:2],a5_[0:2],a6_[0:2];
  a1_ := st1_ + st2_;
  a1_ := a1_ + st3_;
  a1_ := a1_ + st4_;
  a1_ := a1_ + st5_;
  a1_ := a1_ + st6_;
  a2_ := st1_ + st2_;
  a2_ := a2_ + st3_;
  a2_ := a2_ + st4_;
  a2_ := a2_ + st5_;
  a2_ := a2_ + st6_;
  a3_ := st1_ + st2_;
  a3_ := a3_ + st3_;
  a3_ := a3_ + st4_;
  a3_ := a3_ + st5_;
  a3_ := a3_ + st6_;
  a4_ := st1_ + st2_;
  a4_ := a4_ + st3_;
  a4_ := a4_ + st4_;
  a4_ := a4_ + st5_;
  a4_ := a4_ + st6_;
  a5_ := st1_ + st2_;
  a5_ := a5_ + st3_;
  a5_ := a5_ + st4_;
  a5_ := a5_ + st5_;
  a5_ := a5_ + st6_;
  a6_ := st1_ + st2_;
  a6_ := a6_ + st3_;
  a6_ := a6_ + st4_;
  a6_ := a6_ + st5_;
  a6_ := a6_ + st6_;
end

proc PICNIC_AND_OFFLINE:
  inputs: lx[0:2], ly[0:2], lz[0:2], helper_P1_[0:2], helper_P2_[0:2], helper_P3_[0:2]
  outputs: helper_P4_[0:2]
  shares: helper_Nm1[0:2], lxy[0:2];
helper_Nm1 = PARITY_Nm1(helper_P1_, helper_P2_, helper_P3_);
lxy = AND(lx, ly);
helper_P4_ := lxy + helper_Nm1;
helper_P4_ := helper_P4_ + lz;
end

proc SBOX_OFFLINE:
  inputs: lc[0:2], lb[0:2], la[0:2], lf[0:2], le[0:2], ld[0:2], helper_P1_ab[0:2], helper_P1_ca[0:2], helper_P1_bc[0:2], helper_P2_ab[0:2], helper_P2_ca[0:2], helper_P2_bc[0:2], helper_P3_ab[0:2], helper_P3_ca[0:2], helper_P3_bc[0:2]  
  outputs: helper_P4_ab[0:2], helper_P4_ca[0:2], helper_P4_bc[0:2]  
  shares: lzab[0:2], lzca[0:2], lzbc[0:2]; 
lzab := lf + la;
lzab := lzab + lb;
lzab := lzab + lc;
lzbc := ld + la;
lzca := le + la;
lzca := lzca + lb;
helper_P4_ab = PICNIC_AND_OFFLINE(la, lb, lzab, helper_P1_ab, helper_P2_ab, helper_P3_ab);
helper_P4_bc = PICNIC_AND_OFFLINE(lb, lc, lzbc, helper_P1_bc, helper_P2_bc, helper_P3_bc);
helper_P4_ca = PICNIC_AND_OFFLINE(lc, la, lzca, helper_P1_ca, helper_P2_ca, helper_P3_ca);
end

proc LOWMC_ROUND_OFFLINE:
  inputs: lsk_1_[0:2], lsk_2_[0:2], lsk_3_[0:2], lsk_4_[0:2], lsk_5_[0:2], lsk_6_[0:2], prstin_1_[0:2], prstin_2_[0:2], prstin_3_[0:2], prstin_4_[0:2], prstin_5_[0:2], prstin_6_[0:2], stin_1_[0:2], stin_2_[0:2], stin_3_[0:2], stin_4_[0:2], stin_5_[0:2], stin_6_[0:2], helper_P1_1_[0:2], helper_P2_1_[0:2], helper_P3_1_[0:2], helper_P1_2_[0:2], helper_P2_2_[0:2], helper_P3_2_[0:2], helper_P1_3_[0:2], helper_P2_3_[0:2], helper_P3_3_[0:2], helper_P1_4_[0:2], helper_P2_4_[0:2], helper_P3_4_[0:2], helper_P1_5_[0:2], helper_P2_5_[0:2], helper_P3_5_[0:2], helper_P1_6_[0:2], helper_P2_6_[0:2], helper_P3_6_[0:2]

  outputs: helper_P4_1_[0:2], helper_P4_2_[0:2], helper_P4_3_[0:2], helper_P4_4_[0:2], helper_P4_5_[0:2], helper_P4_6_[0:2]

  shares: stout_1_[0:2], stout_2_[0:2], stout_3_[0:2], stout_4_[0:2], stout_5_[0:2], stout_6_[0:2], stouttmp_1_[0:2], stouttmp_2_[0:2], stouttmp_3_[0:2], stouttmp_4_[0:2], stouttmp_5_[0:2], stouttmp_6_[0:2], rk_1_[0:2], rk_2_[0:2], rk_3_[0:2], rk_4_[0:2], rk_5_[0:2], rk_6_[0:2];
(rk_1_, rk_2_, rk_3_, rk_4_, rk_5_, rk_6_) = AFFINE(lsk_1_, lsk_2_, lsk_3_, lsk_4_, lsk_5_, lsk_6_);
stouttmp_1_ := prstin_1_ + rk_1_;
stouttmp_2_ := prstin_2_ + rk_2_;
stouttmp_3_ := prstin_3_ + rk_3_;
stouttmp_4_ := prstin_4_ + rk_4_;
stouttmp_5_ := prstin_5_ + rk_5_;
stouttmp_6_ := prstin_6_ + rk_6_;
(stout_1_, stout_2_, stout_3_, stout_4_, stout_5_, stout_6_) = AFFINE(stouttmp_1_, stouttmp_2_, stouttmp_3_, stouttmp_4_, stouttmp_5_, stouttmp_6_);
(helper_P4_1_, helper_P4_2_, helper_P4_3_) = SBOX_OFFLINE(stin_1_, stin_2_, stin_3_, stout_1_, stout_2_, stout_3_, helper_P1_1_, helper_P1_2_, helper_P1_3_, helper_P2_1_, helper_P2_2_, helper_P2_3_, helper_P3_1_, helper_P3_2_, helper_P3_3_);
(helper_P4_4_, helper_P4_5_, helper_P4_6_) = SBOX_OFFLINE(stin_4_, stin_5_, stin_6_, stout_4_, stout_5_, stout_6_, helper_P1_4_, helper_P1_5_, helper_P1_6_, helper_P2_4_, helper_P2_5_, helper_P2_6_, helper_P3_4_, helper_P3_5_, helper_P3_6_);
end

proc PICNIC_OFFLINE:
  inputs: r1_tape_P1_1_[0:2], r1_tape_P2_1_[0:2], r1_tape_P3_1_[0:2], r1_tape_P4_1_[0:2], r1_tape_P1_2_[0:2], r1_tape_P2_2_[0:2], r1_tape_P3_2_[0:2], r1_tape_P4_2_[0:2], r1_tape_P1_3_[0:2], r1_tape_P2_3_[0:2], r1_tape_P3_3_[0:2], r1_tape_P4_3_[0:2], r1_tape_P1_4_[0:2], r1_tape_P2_4_[0:2], r1_tape_P3_4_[0:2], r1_tape_P4_4_[0:2], r1_tape_P1_5_[0:2], r1_tape_P2_5_[0:2], r1_tape_P3_5_[0:2], r1_tape_P4_5_[0:2], r1_tape_P1_6_[0:2], r1_tape_P2_6_[0:2], r1_tape_P3_6_[0:2], r1_tape_P4_6_[0:2], 
r2_tape_P1_1_[0:2], r2_tape_P2_1_[0:2], r2_tape_P3_1_[0:2], r2_tape_P4_1_[0:2], r2_tape_P1_2_[0:2], r2_tape_P2_2_[0:2], r2_tape_P3_2_[0:2], r2_tape_P4_2_[0:2], r2_tape_P1_3_[0:2], r2_tape_P2_3_[0:2], r2_tape_P3_3_[0:2], r2_tape_P4_3_[0:2], r2_tape_P1_4_[0:2], r2_tape_P2_4_[0:2], r2_tape_P3_4_[0:2], r2_tape_P4_4_[0:2], r2_tape_P1_5_[0:2], r2_tape_P2_5_[0:2], r2_tape_P3_5_[0:2], r2_tape_P4_5_[0:2], r2_tape_P1_6_[0:2], r2_tape_P2_6_[0:2], r2_tape_P3_6_[0:2], r2_tape_P4_6_[0:2], 

r1_helper_P1_1_[0:2], r1_helper_P2_1_[0:2], r1_helper_P3_1_[0:2], r1_helper_P1_2_[0:2], r1_helper_P2_2_[0:2], r1_helper_P3_2_[0:2], r1_helper_P1_3_[0:2], r1_helper_P2_3_[0:2], r1_helper_P3_3_[0:2], r1_helper_P1_4_[0:2], r1_helper_P2_4_[0:2], r1_helper_P3_4_[0:2], r1_helper_P1_5_[0:2], r1_helper_P2_5_[0:2], r1_helper_P3_5_[0:2], r1_helper_P1_6_[0:2], r1_helper_P2_6_[0:2], r1_helper_P3_6_[0:2], 
r2_helper_P1_1_[0:2], r2_helper_P2_1_[0:2], r2_helper_P3_1_[0:2], r2_helper_P1_2_[0:2], r2_helper_P2_2_[0:2], r2_helper_P3_2_[0:2], r2_helper_P1_3_[0:2], r2_helper_P2_3_[0:2], r2_helper_P3_3_[0:2], r2_helper_P1_4_[0:2], r2_helper_P2_4_[0:2], r2_helper_P3_4_[0:2], r2_helper_P1_5_[0:2], r2_helper_P2_5_[0:2], r2_helper_P3_5_[0:2], r2_helper_P1_6_[0:2], r2_helper_P2_6_[0:2], r2_helper_P3_6_[0:2], 

r3_stin_1_[0:2], r3_stin_2_[0:2], r3_stin_3_[0:2], r3_stin_4_[0:2], r3_stin_5_[0:2], r3_stin_6_[0:2]

  outputs: r1_helper_P4_1_[0:2], r1_helper_P4_2_[0:2], r1_helper_P4_3_[0:2], r1_helper_P4_4_[0:2], r1_helper_P4_5_[0:2], r1_helper_P4_6_[0:2], 
r2_helper_P4_1_[0:2], r2_helper_P4_2_[0:2], r2_helper_P4_3_[0:2], r2_helper_P4_4_[0:2], r2_helper_P4_5_[0:2], r2_helper_P4_6_[0:2], 

lsk_1_[0:2], lsk_2_[0:2], lsk_3_[0:2], lsk_4_[0:2], lsk_5_[0:2], lsk_6_[0:2]
  shares: r0_rk_1_[0:2], r0_rk_2_[0:2], r0_rk_3_[0:2], r0_rk_4_[0:2], r0_rk_5_[0:2], r0_rk_6_[0:2], r1_stin_1_[0:2] , r1_stin_2_[0:2] , r1_stin_3_[0:2] , r1_stin_4_[0:2] , r1_stin_5_[0:2] , r1_stin_6_[0:2] , 
r2_stin_1_[0:2] , r2_stin_2_[0:2] , r2_stin_3_[0:2] , r2_stin_4_[0:2] , r2_stin_5_[0:2] , r2_stin_6_[0:2] ;


(* extract initial key *)
r0_rk_1_ = PARITY_N(r1_tape_P1_1_, r1_tape_P2_1_, r1_tape_P3_1_, r1_tape_P4_1_);
r0_rk_2_ = PARITY_N(r1_tape_P1_2_, r1_tape_P2_2_, r1_tape_P3_2_, r1_tape_P4_2_);
r0_rk_3_ = PARITY_N(r1_tape_P1_3_, r1_tape_P2_3_, r1_tape_P3_3_, r1_tape_P4_3_);
r0_rk_4_ = PARITY_N(r1_tape_P1_4_, r1_tape_P2_4_, r1_tape_P3_4_, r1_tape_P4_4_);
r0_rk_5_ = PARITY_N(r1_tape_P1_5_, r1_tape_P2_5_, r1_tape_P3_5_, r1_tape_P4_5_);
r0_rk_6_ = PARITY_N(r1_tape_P1_6_, r1_tape_P2_6_, r1_tape_P3_6_, r1_tape_P4_6_);
(* re-compute secret key masks: lsk = K^-1*r0_rk *)
(lsk_1_, lsk_2_, lsk_3_, lsk_4_, lsk_5_, lsk_6_) = AFFINE(r0_rk_1_, r0_rk_2_, r0_rk_3_, r0_rk_4_, r0_rk_5_, r0_rk_6_);

(* round 2 *)
r2_stin_1_ = PARITY_N(r2_tape_P1_1_, r2_tape_P2_1_, r2_tape_P3_1_, r2_tape_P4_1_);
r2_stin_2_ = PARITY_N(r2_tape_P1_2_, r2_tape_P2_2_, r2_tape_P3_2_, r2_tape_P4_2_);
r2_stin_3_ = PARITY_N(r2_tape_P1_3_, r2_tape_P2_3_, r2_tape_P3_3_, r2_tape_P4_3_);
r2_stin_4_ = PARITY_N(r2_tape_P1_4_, r2_tape_P2_4_, r2_tape_P3_4_, r2_tape_P4_4_);
r2_stin_5_ = PARITY_N(r2_tape_P1_5_, r2_tape_P2_5_, r2_tape_P3_5_, r2_tape_P4_5_);
r2_stin_6_ = PARITY_N(r2_tape_P1_6_, r2_tape_P2_6_, r2_tape_P3_6_, r2_tape_P4_6_);
(r2_helper_P4_1_, r2_helper_P4_2_, r2_helper_P4_3_, r2_helper_P4_4_, r2_helper_P4_5_, r2_helper_P4_6_) = LOWMC_ROUND_OFFLINE(lsk_1_, lsk_2_, lsk_3_, lsk_4_, lsk_5_, lsk_6_, r3_stin_1_, r3_stin_2_, r3_stin_3_, r3_stin_4_, r3_stin_5_, r3_stin_6_, r2_stin_1_, r2_stin_2_, r2_stin_3_, r2_stin_4_, r2_stin_5_, r2_stin_6_, r2_helper_P1_1_, r2_helper_P2_1_, r2_helper_P3_1_, r2_helper_P1_2_, r2_helper_P2_2_, r2_helper_P3_2_, r2_helper_P1_3_, r2_helper_P2_3_, r2_helper_P3_3_, r2_helper_P1_4_, r2_helper_P2_4_, r2_helper_P3_4_, r2_helper_P1_5_, r2_helper_P2_5_, r2_helper_P3_5_, r2_helper_P1_6_, r2_helper_P2_6_, r2_helper_P3_6_);

(* round 1 *)
r1_stin_1_ := r0_rk_1_;
r1_stin_2_ := r0_rk_2_;
r1_stin_3_ := r0_rk_3_;
r1_stin_4_ := r0_rk_4_;
r1_stin_5_ := r0_rk_5_;
r1_stin_6_ := r0_rk_6_;
(r1_helper_P4_1_, r1_helper_P4_2_, r1_helper_P4_3_, r1_helper_P4_4_, r1_helper_P4_5_, r1_helper_P4_6_) = LOWMC_ROUND_OFFLINE(lsk_1_, lsk_2_, lsk_3_, lsk_4_, lsk_5_, lsk_6_, r2_stin_1_, r2_stin_2_, r2_stin_3_, r2_stin_4_, r2_stin_5_, r2_stin_6_, r1_stin_1_, r1_stin_2_, r1_stin_3_, r1_stin_4_, r1_stin_5_, r1_stin_6_, r1_helper_P1_1_, r1_helper_P2_1_, r1_helper_P3_1_, r1_helper_P1_2_, r1_helper_P2_2_, r1_helper_P3_2_, r1_helper_P1_3_, r1_helper_P2_3_, r1_helper_P3_3_, r1_helper_P1_4_, r1_helper_P2_4_, r1_helper_P3_4_, r1_helper_P1_5_, r1_helper_P2_5_, r1_helper_P3_5_, r1_helper_P1_6_, r1_helper_P2_6_, r1_helper_P3_6_);

end

proc PICNIC_AND_ONLINE:
  inputs: hx[0:2], hy[0:2], lx_1_[0:2], lx_2_[0:2], lx_3_[0:2], lx_4_[0:2], ly_1_[0:2], ly_2_[0:2], ly_3_[0:2], ly_4_[0:2], helper_P1_[0:2], helper_P2_[0:2], helper_P3_[0:2], helper_P4_[0:2]
  outputs: hz[0:2], s_1_[0:2], s_2_[0:2], s_3_[0:2], s_4_[0:2]
  shares: a_1_[0:2], a_2_[0:2], a_3_[0:2], a_4_[0:2], b_1_[0:2], b_2_[0:2], b_3_[0:2], b_4_[0:2], c[0:2], s[0:2];

a_1_ = AND(hx, ly_1_);
b_1_ = AND(hy, lx_1_);
s_1_ := a_1_ + b_1_;
s_1_ := s_1_ + helper_P1_;
a_2_ = AND(hx, ly_2_);
b_2_ = AND(hy, lx_2_);
s_2_ := a_2_ + b_2_;
s_2_ := s_2_ + helper_P2_;
a_3_ = AND(hx, ly_3_);
b_3_ = AND(hy, lx_3_);
s_3_ := a_3_ + b_3_;
s_3_ := s_3_ + helper_P3_;
a_4_ = AND(hx, ly_4_);
b_4_ = AND(hy, lx_4_);
s_4_ := a_4_ + b_4_;
s_4_ := s_4_ + helper_P4_;
c = AND(hx, hy);
s := s_1_ + s_2_;
s := s + s_3_;
s := s + s_4_;
hz := c + s;
end

proc SBOX_ONLINE:
  inputs: hc[0:2], hb[0:2], ha[0:2], lc_1_[0:2], lb_1_[0:2], la_1_[0:2], lc_2_[0:2], lb_2_[0:2], la_2_[0:2], lc_3_[0:2], lb_3_[0:2], la_3_[0:2], lc_4_[0:2], lb_4_[0:2], la_4_[0:2], helper_P1_ab[0:2], helper_P1_ca[0:2], helper_P1_bc[0:2], helper_P2_ab[0:2], helper_P2_ca[0:2], helper_P2_bc[0:2], helper_P3_ab[0:2], helper_P3_ca[0:2], helper_P3_bc[0:2], helper_P4_ab[0:2], helper_P4_ca[0:2], helper_P4_bc[0:2]  
  outputs: hf[0:2], he[0:2], hd[0:2], s_ab_1_[0:2], s_ab_2_[0:2], s_ab_3_[0:2], s_ab_4_[0:2], s_ca_1_[0:2], s_ca_2_[0:2], s_ca_3_[0:2], s_ca_4_[0:2], s_bc_1_[0:2], s_bc_2_[0:2], s_bc_3_[0:2], s_bc_4_[0:2] 
  shares: hab[0:2], hca[0:2], hbc[0:2] ;
(hab, s_ab_1_, s_ab_2_, s_ab_3_, s_ab_4_) = PICNIC_AND_ONLINE(ha, hb, la_1_, la_2_, la_3_, la_4_, lb_1_, lb_2_, lb_3_, lb_4_, helper_P1_ab, helper_P2_ab, helper_P3_ab, helper_P4_ab);

(hbc, s_bc_1_, s_bc_2_, s_bc_3_, s_bc_4_) = PICNIC_AND_ONLINE(hb, hc, lb_1_, lb_2_, lb_3_, lb_4_, lc_1_, lc_2_, lc_3_, lc_4_, helper_P1_bc, helper_P2_bc, helper_P3_bc, helper_P4_bc);

(hca, s_ca_1_, s_ca_2_, s_ca_3_, s_ca_4_) = PICNIC_AND_ONLINE(hc, ha, lc_1_, lc_2_, lc_3_, lc_4_, la_1_, la_2_, la_3_, la_4_, helper_P1_ca, helper_P2_ca, helper_P3_ca, helper_P4_ca);

hf := ha + hb;
hf := hf + hc;
hf := hf + hab;
he := ha + hb;
he := he + hca;
hd := ha + hbc;
end

proc LOWMC_ROUND_ONLINE:
  inputs: hsk_1_[0:2], hsk_2_[0:2], hsk_3_[0:2], hsk_4_[0:2], hsk_5_[0:2], hsk_6_[0:2], 
stin_1_[0:2], stin_2_[0:2], stin_3_[0:2], stin_4_[0:2], stin_5_[0:2], stin_6_[0:2], 
tape_P1_1_[0:2], tape_P2_1_[0:2], tape_P3_1_[0:2], tape_P4_1_[0:2], tape_P1_2_[0:2], tape_P2_2_[0:2], tape_P3_2_[0:2], tape_P4_2_[0:2], tape_P1_3_[0:2], tape_P2_3_[0:2], tape_P3_3_[0:2], tape_P4_3_[0:2], tape_P1_4_[0:2], tape_P2_4_[0:2], tape_P3_4_[0:2], tape_P4_4_[0:2], tape_P1_5_[0:2], tape_P2_5_[0:2], tape_P3_5_[0:2], tape_P4_5_[0:2], tape_P1_6_[0:2], tape_P2_6_[0:2], tape_P3_6_[0:2], tape_P4_6_[0:2], helper_P1_1_[0:2], helper_P2_1_[0:2], helper_P3_1_[0:2], helper_P4_1_[0:2], helper_P1_2_[0:2], helper_P2_2_[0:2], helper_P3_2_[0:2], helper_P4_2_[0:2], helper_P1_3_[0:2], helper_P2_3_[0:2], helper_P3_3_[0:2], helper_P4_3_[0:2], helper_P1_4_[0:2], helper_P2_4_[0:2], helper_P3_4_[0:2], helper_P4_4_[0:2], helper_P1_5_[0:2], helper_P2_5_[0:2], helper_P3_5_[0:2], helper_P4_5_[0:2], helper_P1_6_[0:2], helper_P2_6_[0:2], helper_P3_6_[0:2], helper_P4_6_[0:2]

  outputs: stout_1_[0:2], stout_2_[0:2], stout_3_[0:2], stout_4_[0:2], stout_5_[0:2], stout_6_[0:2], 
msgs_P1_1_[0:2], msgs_P2_1_[0:2], msgs_P3_1_[0:2], msgs_P4_1_[0:2], msgs_P1_2_[0:2], msgs_P2_2_[0:2], msgs_P3_2_[0:2], msgs_P4_2_[0:2], msgs_P1_3_[0:2], msgs_P2_3_[0:2], msgs_P3_3_[0:2], msgs_P4_3_[0:2], msgs_P1_4_[0:2], msgs_P2_4_[0:2], msgs_P3_4_[0:2], msgs_P4_4_[0:2], msgs_P1_5_[0:2], msgs_P2_5_[0:2], msgs_P3_5_[0:2], msgs_P4_5_[0:2], msgs_P1_6_[0:2], msgs_P2_6_[0:2], msgs_P3_6_[0:2], msgs_P4_6_[0:2]

  shares: sbout_1_[0:2], sbout_2_[0:2], sbout_3_[0:2], sbout_4_[0:2], sbout_5_[0:2], sbout_6_[0:2], 
mmout_1_[0:2], mmout_2_[0:2], mmout_3_[0:2], mmout_4_[0:2], mmout_5_[0:2], mmout_6_[0:2], 
rk_1_[0:2], rk_2_[0:2], rk_3_[0:2], rk_4_[0:2], rk_5_[0:2], rk_6_[0:2], 
stouttmp_1_[0:2] , stouttmp_2_[0:2] , stouttmp_3_[0:2] , stouttmp_4_[0:2] , stouttmp_5_[0:2] , stouttmp_6_[0:2] 
;
(* sbox layer *)
(sbout_1_, sbout_2_, sbout_3_, msgs_P1_1_, msgs_P2_1_, msgs_P3_1_, msgs_P4_1_, msgs_P1_2_, msgs_P2_2_, msgs_P3_2_, msgs_P4_2_, msgs_P1_3_, msgs_P2_3_, msgs_P3_3_, msgs_P4_3_) = SBOX_ONLINE(stin_1_, stin_2_, stin_3_, tape_P1_1_, tape_P1_2_, tape_P1_3_, tape_P2_1_, tape_P2_2_, tape_P2_3_, tape_P3_1_, tape_P3_2_, tape_P3_3_, tape_P4_1_, tape_P4_2_, tape_P4_3_, helper_P1_1_, helper_P1_2_, helper_P1_3_, helper_P2_1_, helper_P2_2_, helper_P2_3_, helper_P3_1_, helper_P3_2_, helper_P3_3_, helper_P4_1_, helper_P4_2_, helper_P4_3_ );

(sbout_4_, sbout_5_, sbout_6_, msgs_P1_4_, msgs_P2_4_, msgs_P3_4_, msgs_P4_4_, msgs_P1_5_, msgs_P2_5_, msgs_P3_5_, msgs_P4_5_, msgs_P1_6_, msgs_P2_6_, msgs_P3_6_, msgs_P4_6_) = SBOX_ONLINE(stin_4_, stin_5_, stin_6_, tape_P1_4_, tape_P1_5_, tape_P1_6_, tape_P2_4_, tape_P2_5_, tape_P2_6_, tape_P3_4_, tape_P3_5_, tape_P3_6_, tape_P4_4_, tape_P4_5_, tape_P4_6_, helper_P1_4_, helper_P1_5_, helper_P1_6_, helper_P2_4_, helper_P2_5_, helper_P2_6_, helper_P3_4_, helper_P3_5_, helper_P3_6_, helper_P4_4_, helper_P4_5_, helper_P4_6_ );

(* affine layer *)
(mmout_1_, mmout_2_, mmout_3_, mmout_4_, mmout_5_, mmout_6_) = AFFINE(sbout_1_, sbout_2_, sbout_3_, sbout_4_, sbout_5_, sbout_6_);

(* key update *)
(rk_1_, rk_2_, rk_3_, rk_4_, rk_5_, rk_6_) = AFFINE(hsk_1_, hsk_2_, hsk_3_, hsk_4_, hsk_5_, hsk_6_);

(* state update *)
(* without refresh the gadget is not NI*)
stouttmp_1_ := mmout_1_ + rk_1_;
stout_1_ = REFM(stouttmp_1_);
(* without refresh the gadget is not NI*)
stouttmp_2_ := mmout_2_ + rk_2_;
stout_2_ = REFM(stouttmp_2_);
(* without refresh the gadget is not NI*)
stouttmp_3_ := mmout_3_ + rk_3_;
stout_3_ = REFM(stouttmp_3_);
(* without refresh the gadget is not NI*)
stouttmp_4_ := mmout_4_ + rk_4_;
stout_4_ = REFM(stouttmp_4_);
(* without refresh the gadget is not NI*)
stouttmp_5_ := mmout_5_ + rk_5_;
stout_5_ = REFM(stouttmp_5_);
(* without refresh the gadget is not NI*)
stouttmp_6_ := mmout_6_ + rk_6_;
stout_6_ = REFM(stouttmp_6_);
end

proc PICNIC_ONLINE:
  inputs: hsk_1_[0:2], hsk_2_[0:2], hsk_3_[0:2], hsk_4_[0:2], hsk_5_[0:2], hsk_6_[0:2], 
r1_tape_P1_1_[0:2], r1_tape_P2_1_[0:2], r1_tape_P3_1_[0:2], r1_tape_P4_1_[0:2], r1_tape_P1_2_[0:2], r1_tape_P2_2_[0:2], r1_tape_P3_2_[0:2], r1_tape_P4_2_[0:2], r1_tape_P1_3_[0:2], r1_tape_P2_3_[0:2], r1_tape_P3_3_[0:2], r1_tape_P4_3_[0:2], r1_tape_P1_4_[0:2], r1_tape_P2_4_[0:2], r1_tape_P3_4_[0:2], r1_tape_P4_4_[0:2], r1_tape_P1_5_[0:2], r1_tape_P2_5_[0:2], r1_tape_P3_5_[0:2], r1_tape_P4_5_[0:2], r1_tape_P1_6_[0:2], r1_tape_P2_6_[0:2], r1_tape_P3_6_[0:2], r1_tape_P4_6_[0:2], r2_tape_P1_1_[0:2], r2_tape_P2_1_[0:2], r2_tape_P3_1_[0:2], r2_tape_P4_1_[0:2], r2_tape_P1_2_[0:2], r2_tape_P2_2_[0:2], r2_tape_P3_2_[0:2], r2_tape_P4_2_[0:2], r2_tape_P1_3_[0:2], r2_tape_P2_3_[0:2], r2_tape_P3_3_[0:2], r2_tape_P4_3_[0:2], r2_tape_P1_4_[0:2], r2_tape_P2_4_[0:2], r2_tape_P3_4_[0:2], r2_tape_P4_4_[0:2], r2_tape_P1_5_[0:2], r2_tape_P2_5_[0:2], r2_tape_P3_5_[0:2], r2_tape_P4_5_[0:2], r2_tape_P1_6_[0:2], r2_tape_P2_6_[0:2], r2_tape_P3_6_[0:2], r2_tape_P4_6_[0:2], 
r1_helper_P1_1_[0:2] , r1_helper_P2_1_[0:2] , r1_helper_P3_1_[0:2] , r1_helper_P4_1_[0:2] , r1_helper_P1_2_[0:2] , r1_helper_P2_2_[0:2] , r1_helper_P3_2_[0:2] , r1_helper_P4_2_[0:2] , r1_helper_P1_3_[0:2] , r1_helper_P2_3_[0:2] , r1_helper_P3_3_[0:2] , r1_helper_P4_3_[0:2] , r1_helper_P1_4_[0:2] , r1_helper_P2_4_[0:2] , r1_helper_P3_4_[0:2] , r1_helper_P4_4_[0:2] , r1_helper_P1_5_[0:2] , r1_helper_P2_5_[0:2] , r1_helper_P3_5_[0:2] , r1_helper_P4_5_[0:2] , r1_helper_P1_6_[0:2] , r1_helper_P2_6_[0:2] , r1_helper_P3_6_[0:2] , r1_helper_P4_6_[0:2] , r2_helper_P1_1_[0:2] , r2_helper_P2_1_[0:2] , r2_helper_P3_1_[0:2] , r2_helper_P4_1_[0:2] , r2_helper_P1_2_[0:2] , r2_helper_P2_2_[0:2] , r2_helper_P3_2_[0:2] , r2_helper_P4_2_[0:2] , r2_helper_P1_3_[0:2] , r2_helper_P2_3_[0:2] , r2_helper_P3_3_[0:2] , r2_helper_P4_3_[0:2] , r2_helper_P1_4_[0:2] , r2_helper_P2_4_[0:2] , r2_helper_P3_4_[0:2] , r2_helper_P4_4_[0:2] , r2_helper_P1_5_[0:2] , r2_helper_P2_5_[0:2] , r2_helper_P3_5_[0:2] , r2_helper_P4_5_[0:2] , r2_helper_P1_6_[0:2] , r2_helper_P2_6_[0:2] , r2_helper_P3_6_[0:2] , r2_helper_P4_6_[0:2] 


  outputs: r1_msgs_P1_1_[0:2], r1_msgs_P2_1_[0:2], r1_msgs_P3_1_[0:2], r1_msgs_P4_1_[0:2], r1_msgs_P1_2_[0:2], r1_msgs_P2_2_[0:2], r1_msgs_P3_2_[0:2], r1_msgs_P4_2_[0:2], r1_msgs_P1_3_[0:2], r1_msgs_P2_3_[0:2], r1_msgs_P3_3_[0:2], r1_msgs_P4_3_[0:2], r1_msgs_P1_4_[0:2], r1_msgs_P2_4_[0:2], r1_msgs_P3_4_[0:2], r1_msgs_P4_4_[0:2], r1_msgs_P1_5_[0:2], r1_msgs_P2_5_[0:2], r1_msgs_P3_5_[0:2], r1_msgs_P4_5_[0:2], r1_msgs_P1_6_[0:2], r1_msgs_P2_6_[0:2], r1_msgs_P3_6_[0:2], r1_msgs_P4_6_[0:2], r2_msgs_P1_1_[0:2], r2_msgs_P2_1_[0:2], r2_msgs_P3_1_[0:2], r2_msgs_P4_1_[0:2], r2_msgs_P1_2_[0:2], r2_msgs_P2_2_[0:2], r2_msgs_P3_2_[0:2], r2_msgs_P4_2_[0:2], r2_msgs_P1_3_[0:2], r2_msgs_P2_3_[0:2], r2_msgs_P3_3_[0:2], r2_msgs_P4_3_[0:2], r2_msgs_P1_4_[0:2], r2_msgs_P2_4_[0:2], r2_msgs_P3_4_[0:2], r2_msgs_P4_4_[0:2], r2_msgs_P1_5_[0:2], r2_msgs_P2_5_[0:2], r2_msgs_P3_5_[0:2], r2_msgs_P4_5_[0:2], r2_msgs_P1_6_[0:2], r2_msgs_P2_6_[0:2], r2_msgs_P3_6_[0:2], r2_msgs_P4_6_[0:2], 
r3_stin_1_[0:2], r3_stin_2_[0:2], r3_stin_3_[0:2], r3_stin_4_[0:2], r3_stin_5_[0:2], r3_stin_6_[0:2]

  shares: r0_rk_1_[0:2], r0_rk_2_[0:2], r0_rk_3_[0:2], r0_rk_4_[0:2], r0_rk_5_[0:2], r0_rk_6_[0:2], r1_stin_1_[0:2], r1_stin_2_[0:2], r1_stin_3_[0:2], r1_stin_4_[0:2], r1_stin_5_[0:2], r1_stin_6_[0:2], r2_stin_1_[0:2], r2_stin_2_[0:2], r2_stin_3_[0:2], r2_stin_4_[0:2], r2_stin_5_[0:2], r2_stin_6_[0:2];

(* key init *)
(r0_rk_1_, r0_rk_2_, r0_rk_3_, r0_rk_4_, r0_rk_5_, r0_rk_6_) = AFFINE(hsk_1_, hsk_2_, hsk_3_, hsk_4_, hsk_5_, hsk_6_);
r1_stin_1_ = REFM(r0_rk_1_);
r1_stin_2_ = REFM(r0_rk_2_);
r1_stin_3_ = REFM(r0_rk_3_);
r1_stin_4_ = REFM(r0_rk_4_);
r1_stin_5_ = REFM(r0_rk_5_);
r1_stin_6_ = REFM(r0_rk_6_);

(* round 1 *)
(r2_stin_1_,r2_stin_2_,r2_stin_3_,r2_stin_4_,r2_stin_5_,r2_stin_6_,r1_msgs_P1_1_, r1_msgs_P2_1_, r1_msgs_P3_1_, r1_msgs_P4_1_, r1_msgs_P1_2_, r1_msgs_P2_2_, r1_msgs_P3_2_, r1_msgs_P4_2_, r1_msgs_P1_3_, r1_msgs_P2_3_, r1_msgs_P3_3_, r1_msgs_P4_3_, r1_msgs_P1_4_, r1_msgs_P2_4_, r1_msgs_P3_4_, r1_msgs_P4_4_, r1_msgs_P1_5_, r1_msgs_P2_5_, r1_msgs_P3_5_, r1_msgs_P4_5_, r1_msgs_P1_6_, r1_msgs_P2_6_, r1_msgs_P3_6_, r1_msgs_P4_6_) = LOWMC_ROUND_ONLINE(hsk_1_, hsk_2_, hsk_3_, hsk_4_, hsk_5_, hsk_6_, r1_stin_1_, r1_stin_2_, r1_stin_3_, r1_stin_4_, r1_stin_5_, r1_stin_6_, r1_tape_P1_1_, r1_tape_P2_1_, r1_tape_P3_1_, r1_tape_P4_1_, r1_tape_P1_2_, r1_tape_P2_2_, r1_tape_P3_2_, r1_tape_P4_2_, r1_tape_P1_3_, r1_tape_P2_3_, r1_tape_P3_3_, r1_tape_P4_3_, r1_tape_P1_4_, r1_tape_P2_4_, r1_tape_P3_4_, r1_tape_P4_4_, r1_tape_P1_5_, r1_tape_P2_5_, r1_tape_P3_5_, r1_tape_P4_5_, r1_tape_P1_6_, r1_tape_P2_6_, r1_tape_P3_6_, r1_tape_P4_6_, r1_helper_P1_1_, r1_helper_P2_1_, r1_helper_P3_1_, r1_helper_P4_1_, r1_helper_P1_2_, r1_helper_P2_2_, r1_helper_P3_2_, r1_helper_P4_2_, r1_helper_P1_3_, r1_helper_P2_3_, r1_helper_P3_3_, r1_helper_P4_3_, r1_helper_P1_4_, r1_helper_P2_4_, r1_helper_P3_4_, r1_helper_P4_4_, r1_helper_P1_5_, r1_helper_P2_5_, r1_helper_P3_5_, r1_helper_P4_5_, r1_helper_P1_6_, r1_helper_P2_6_, r1_helper_P3_6_, r1_helper_P4_6_);

(* round 2 *)
(r3_stin_1_,r3_stin_2_,r3_stin_3_,r3_stin_4_,r3_stin_5_,r3_stin_6_,r2_msgs_P1_1_, r2_msgs_P2_1_, r2_msgs_P3_1_, r2_msgs_P4_1_, r2_msgs_P1_2_, r2_msgs_P2_2_, r2_msgs_P3_2_, r2_msgs_P4_2_, r2_msgs_P1_3_, r2_msgs_P2_3_, r2_msgs_P3_3_, r2_msgs_P4_3_, r2_msgs_P1_4_, r2_msgs_P2_4_, r2_msgs_P3_4_, r2_msgs_P4_4_, r2_msgs_P1_5_, r2_msgs_P2_5_, r2_msgs_P3_5_, r2_msgs_P4_5_, r2_msgs_P1_6_, r2_msgs_P2_6_, r2_msgs_P3_6_, r2_msgs_P4_6_) = LOWMC_ROUND_ONLINE(hsk_1_, hsk_2_, hsk_3_, hsk_4_, hsk_5_, hsk_6_, r2_stin_1_, r2_stin_2_, r2_stin_3_, r2_stin_4_, r2_stin_5_, r2_stin_6_, r2_tape_P1_1_, r2_tape_P2_1_, r2_tape_P3_1_, r2_tape_P4_1_, r2_tape_P1_2_, r2_tape_P2_2_, r2_tape_P3_2_, r2_tape_P4_2_, r2_tape_P1_3_, r2_tape_P2_3_, r2_tape_P3_3_, r2_tape_P4_3_, r2_tape_P1_4_, r2_tape_P2_4_, r2_tape_P3_4_, r2_tape_P4_4_, r2_tape_P1_5_, r2_tape_P2_5_, r2_tape_P3_5_, r2_tape_P4_5_, r2_tape_P1_6_, r2_tape_P2_6_, r2_tape_P3_6_, r2_tape_P4_6_, r2_helper_P1_1_, r2_helper_P2_1_, r2_helper_P3_1_, r2_helper_P4_1_, r2_helper_P1_2_, r2_helper_P2_2_, r2_helper_P3_2_, r2_helper_P4_2_, r2_helper_P1_3_, r2_helper_P2_3_, r2_helper_P3_3_, r2_helper_P4_3_, r2_helper_P1_4_, r2_helper_P2_4_, r2_helper_P3_4_, r2_helper_P4_4_, r2_helper_P1_5_, r2_helper_P2_5_, r2_helper_P3_5_, r2_helper_P4_5_, r2_helper_P1_6_, r2_helper_P2_6_, r2_helper_P3_6_, r2_helper_P4_6_);


end

proc PICNIC_MPC:
  inputs: sk_1_[0:2], sk_2_[0:2], sk_3_[0:2], sk_4_[0:2], sk_5_[0:2], sk_6_[0:2], 
r1_tape_P1_1_[0:2], r1_tape_P2_1_[0:2], r1_tape_P3_1_[0:2], r1_tape_P4_1_[0:2], r1_tape_P1_2_[0:2], r1_tape_P2_2_[0:2], r1_tape_P3_2_[0:2], r1_tape_P4_2_[0:2], r1_tape_P1_3_[0:2], r1_tape_P2_3_[0:2], r1_tape_P3_3_[0:2], r1_tape_P4_3_[0:2], r1_tape_P1_4_[0:2], r1_tape_P2_4_[0:2], r1_tape_P3_4_[0:2], r1_tape_P4_4_[0:2], r1_tape_P1_5_[0:2], r1_tape_P2_5_[0:2], r1_tape_P3_5_[0:2], r1_tape_P4_5_[0:2], r1_tape_P1_6_[0:2], r1_tape_P2_6_[0:2], r1_tape_P3_6_[0:2], r1_tape_P4_6_[0:2], r2_tape_P1_1_[0:2], r2_tape_P2_1_[0:2], r2_tape_P3_1_[0:2], r2_tape_P4_1_[0:2], r2_tape_P1_2_[0:2], r2_tape_P2_2_[0:2], r2_tape_P3_2_[0:2], r2_tape_P4_2_[0:2], r2_tape_P1_3_[0:2], r2_tape_P2_3_[0:2], r2_tape_P3_3_[0:2], r2_tape_P4_3_[0:2], r2_tape_P1_4_[0:2], r2_tape_P2_4_[0:2], r2_tape_P3_4_[0:2], r2_tape_P4_4_[0:2], r2_tape_P1_5_[0:2], r2_tape_P2_5_[0:2], r2_tape_P3_5_[0:2], r2_tape_P4_5_[0:2], r2_tape_P1_6_[0:2], r2_tape_P2_6_[0:2], r2_tape_P3_6_[0:2], r2_tape_P4_6_[0:2], 
r1_helper_P1_1_[0:2], r1_helper_P2_1_[0:2], r1_helper_P3_1_[0:2], r1_helper_P1_2_[0:2], r1_helper_P2_2_[0:2], r1_helper_P3_2_[0:2], r1_helper_P1_3_[0:2], r1_helper_P2_3_[0:2], r1_helper_P3_3_[0:2], r1_helper_P1_4_[0:2], r1_helper_P2_4_[0:2], r1_helper_P3_4_[0:2], r1_helper_P1_5_[0:2], r1_helper_P2_5_[0:2], r1_helper_P3_5_[0:2], r1_helper_P1_6_[0:2], r1_helper_P2_6_[0:2], r1_helper_P3_6_[0:2], r2_helper_P1_1_[0:2], r2_helper_P2_1_[0:2], r2_helper_P3_1_[0:2], r2_helper_P1_2_[0:2], r2_helper_P2_2_[0:2], r2_helper_P3_2_[0:2], r2_helper_P1_3_[0:2], r2_helper_P2_3_[0:2], r2_helper_P3_3_[0:2], r2_helper_P1_4_[0:2], r2_helper_P2_4_[0:2], r2_helper_P3_4_[0:2], r2_helper_P1_5_[0:2], r2_helper_P2_5_[0:2], r2_helper_P3_5_[0:2], r2_helper_P1_6_[0:2], r2_helper_P2_6_[0:2], r2_helper_P3_6_[0:2], 
(* shares of zero vectors *)
zero_1_[0:2], zero_2_[0:2], zero_3_[0:2], zero_4_[0:2], zero_5_[0:2], zero_6_[0:2]

  outputs: (* offline results to be committed *)
r1_helper_P4_1_[0:2], r1_helper_P4_2_[0:2], r1_helper_P4_3_[0:2], r1_helper_P4_4_[0:2], r1_helper_P4_5_[0:2], r1_helper_P4_6_[0:2], 
r2_helper_P4_1_[0:2], r2_helper_P4_2_[0:2], r2_helper_P4_3_[0:2], r2_helper_P4_4_[0:2], r2_helper_P4_5_[0:2], r2_helper_P4_6_[0:2], 

(* online results to be committed *)
hsk_1_[0:2], hsk_2_[0:2], hsk_3_[0:2], hsk_4_[0:2], hsk_5_[0:2], hsk_6_[0:2], 
r1_msgs_P1_1_[0:2], r1_msgs_P2_1_[0:2], r1_msgs_P3_1_[0:2], r1_msgs_P4_1_[0:2], r1_msgs_P1_2_[0:2], r1_msgs_P2_2_[0:2], r1_msgs_P3_2_[0:2], r1_msgs_P4_2_[0:2], r1_msgs_P1_3_[0:2], r1_msgs_P2_3_[0:2], r1_msgs_P3_3_[0:2], r1_msgs_P4_3_[0:2], r1_msgs_P1_4_[0:2], r1_msgs_P2_4_[0:2], r1_msgs_P3_4_[0:2], r1_msgs_P4_4_[0:2], r1_msgs_P1_5_[0:2], r1_msgs_P2_5_[0:2], r1_msgs_P3_5_[0:2], r1_msgs_P4_5_[0:2], r1_msgs_P1_6_[0:2], r1_msgs_P2_6_[0:2], r1_msgs_P3_6_[0:2], r1_msgs_P4_6_[0:2], r2_msgs_P1_1_[0:2], r2_msgs_P2_1_[0:2], r2_msgs_P3_1_[0:2], r2_msgs_P4_1_[0:2], r2_msgs_P1_2_[0:2], r2_msgs_P2_2_[0:2], r2_msgs_P3_2_[0:2], r2_msgs_P4_2_[0:2], r2_msgs_P1_3_[0:2], r2_msgs_P2_3_[0:2], r2_msgs_P3_3_[0:2], r2_msgs_P4_3_[0:2], r2_msgs_P1_4_[0:2], r2_msgs_P2_4_[0:2], r2_msgs_P3_4_[0:2], r2_msgs_P4_4_[0:2], r2_msgs_P1_5_[0:2], r2_msgs_P2_5_[0:2], r2_msgs_P3_5_[0:2], r2_msgs_P4_5_[0:2], r2_msgs_P1_6_[0:2], r2_msgs_P2_6_[0:2], r2_msgs_P3_6_[0:2], r2_msgs_P4_6_[0:2], 
r3_stin_1_[0:2], r3_stin_2_[0:2], r3_stin_3_[0:2], r3_stin_4_[0:2], r3_stin_5_[0:2], r3_stin_6_[0:2] 

  shares: rsk_1_[0:2], rsk_2_[0:2], rsk_3_[0:2], rsk_4_[0:2], rsk_5_[0:2], rsk_6_[0:2], 
lsk_1_[0:2], lsk_2_[0:2], lsk_3_[0:2], lsk_4_[0:2], lsk_5_[0:2], lsk_6_[0:2];

(* offline phase *)
(r1_helper_P4_1_, r1_helper_P4_2_, r1_helper_P4_3_, r1_helper_P4_4_, r1_helper_P4_5_, r1_helper_P4_6_, r2_helper_P4_1_, r2_helper_P4_2_, r2_helper_P4_3_, r2_helper_P4_4_, r2_helper_P4_5_, r2_helper_P4_6_, lsk_1_, lsk_2_, lsk_3_, lsk_4_, lsk_5_, lsk_6_) = PICNIC_OFFLINE(
r1_tape_P1_1_, r1_tape_P2_1_, r1_tape_P3_1_, r1_tape_P4_1_, r1_tape_P1_2_, r1_tape_P2_2_, r1_tape_P3_2_, r1_tape_P4_2_, r1_tape_P1_3_, r1_tape_P2_3_, r1_tape_P3_3_, r1_tape_P4_3_, r1_tape_P1_4_, r1_tape_P2_4_, r1_tape_P3_4_, r1_tape_P4_4_, r1_tape_P1_5_, r1_tape_P2_5_, r1_tape_P3_5_, r1_tape_P4_5_, r1_tape_P1_6_, r1_tape_P2_6_, r1_tape_P3_6_, r1_tape_P4_6_, r2_tape_P1_1_, r2_tape_P2_1_, r2_tape_P3_1_, r2_tape_P4_1_, r2_tape_P1_2_, r2_tape_P2_2_, r2_tape_P3_2_, r2_tape_P4_2_, r2_tape_P1_3_, r2_tape_P2_3_, r2_tape_P3_3_, r2_tape_P4_3_, r2_tape_P1_4_, r2_tape_P2_4_, r2_tape_P3_4_, r2_tape_P4_4_, r2_tape_P1_5_, r2_tape_P2_5_, r2_tape_P3_5_, r2_tape_P4_5_, r2_tape_P1_6_, r2_tape_P2_6_, r2_tape_P3_6_, r2_tape_P4_6_, r1_helper_P1_1_, r1_helper_P2_1_, r1_helper_P3_1_, r1_helper_P1_2_, r1_helper_P2_2_, r1_helper_P3_2_, r1_helper_P1_3_, r1_helper_P2_3_, r1_helper_P3_3_, r1_helper_P1_4_, r1_helper_P2_4_, r1_helper_P3_4_, r1_helper_P1_5_, r1_helper_P2_5_, r1_helper_P3_5_, r1_helper_P1_6_, r1_helper_P2_6_, r1_helper_P3_6_, r2_helper_P1_1_, r2_helper_P2_1_, r2_helper_P3_1_, r2_helper_P1_2_, r2_helper_P2_2_, r2_helper_P3_2_, r2_helper_P1_3_, r2_helper_P2_3_, r2_helper_P3_3_, r2_helper_P1_4_, r2_helper_P2_4_, r2_helper_P3_4_, r2_helper_P1_5_, r2_helper_P2_5_, r2_helper_P3_5_, r2_helper_P1_6_, r2_helper_P2_6_, r2_helper_P3_6_, zero_1_, zero_2_, zero_3_, zero_4_, zero_5_, zero_6_);

(* refresh & mask secret key *)
rsk_1_ = REFM(sk_1_);
rsk_2_ = REFM(sk_2_);
rsk_3_ = REFM(sk_3_);
rsk_4_ = REFM(sk_4_);
rsk_5_ = REFM(sk_5_);
rsk_6_ = REFM(sk_6_);
hsk_1_ := rsk_1_ + lsk_1_;
hsk_2_ := rsk_2_ + lsk_2_;
hsk_3_ := rsk_3_ + lsk_3_;
hsk_4_ := rsk_4_ + lsk_4_;
hsk_5_ := rsk_5_ + lsk_5_;
hsk_6_ := rsk_6_ + lsk_6_;

(* online phase *)
(r1_msgs_P1_1_, r1_msgs_P2_1_, r1_msgs_P3_1_, r1_msgs_P4_1_, r1_msgs_P1_2_, r1_msgs_P2_2_, r1_msgs_P3_2_, r1_msgs_P4_2_, r1_msgs_P1_3_, r1_msgs_P2_3_, r1_msgs_P3_3_, r1_msgs_P4_3_, r1_msgs_P1_4_, r1_msgs_P2_4_, r1_msgs_P3_4_, r1_msgs_P4_4_, r1_msgs_P1_5_, r1_msgs_P2_5_, r1_msgs_P3_5_, r1_msgs_P4_5_, r1_msgs_P1_6_, r1_msgs_P2_6_, r1_msgs_P3_6_, r1_msgs_P4_6_, r2_msgs_P1_1_, r2_msgs_P2_1_, r2_msgs_P3_1_, r2_msgs_P4_1_, r2_msgs_P1_2_, r2_msgs_P2_2_, r2_msgs_P3_2_, r2_msgs_P4_2_, r2_msgs_P1_3_, r2_msgs_P2_3_, r2_msgs_P3_3_, r2_msgs_P4_3_, r2_msgs_P1_4_, r2_msgs_P2_4_, r2_msgs_P3_4_, r2_msgs_P4_4_, r2_msgs_P1_5_, r2_msgs_P2_5_, r2_msgs_P3_5_, r2_msgs_P4_5_, r2_msgs_P1_6_, r2_msgs_P2_6_, r2_msgs_P3_6_, r2_msgs_P4_6_, r3_stin_1_, r3_stin_2_, r3_stin_3_, r3_stin_4_, r3_stin_5_, r3_stin_6_) = PICNIC_ONLINE(
hsk_1_, hsk_2_, hsk_3_, hsk_4_, hsk_5_, hsk_6_, r1_tape_P1_1_, r1_tape_P2_1_, r1_tape_P3_1_, r1_tape_P4_1_, r1_tape_P1_2_, r1_tape_P2_2_, r1_tape_P3_2_, r1_tape_P4_2_, r1_tape_P1_3_, r1_tape_P2_3_, r1_tape_P3_3_, r1_tape_P4_3_, r1_tape_P1_4_, r1_tape_P2_4_, r1_tape_P3_4_, r1_tape_P4_4_, r1_tape_P1_5_, r1_tape_P2_5_, r1_tape_P3_5_, r1_tape_P4_5_, r1_tape_P1_6_, r1_tape_P2_6_, r1_tape_P3_6_, r1_tape_P4_6_, r2_tape_P1_1_, r2_tape_P2_1_, r2_tape_P3_1_, r2_tape_P4_1_, r2_tape_P1_2_, r2_tape_P2_2_, r2_tape_P3_2_, r2_tape_P4_2_, r2_tape_P1_3_, r2_tape_P2_3_, r2_tape_P3_3_, r2_tape_P4_3_, r2_tape_P1_4_, r2_tape_P2_4_, r2_tape_P3_4_, r2_tape_P4_4_, r2_tape_P1_5_, r2_tape_P2_5_, r2_tape_P3_5_, r2_tape_P4_5_, r2_tape_P1_6_, r2_tape_P2_6_, r2_tape_P3_6_, r2_tape_P4_6_, r1_helper_P1_1_, r1_helper_P2_1_, r1_helper_P3_1_, r1_helper_P4_1_, r1_helper_P1_2_, r1_helper_P2_2_, r1_helper_P3_2_, r1_helper_P4_2_, r1_helper_P1_3_, r1_helper_P2_3_, r1_helper_P3_3_, r1_helper_P4_3_, r1_helper_P1_4_, r1_helper_P2_4_, r1_helper_P3_4_, r1_helper_P4_4_, r1_helper_P1_5_, r1_helper_P2_5_, r1_helper_P3_5_, r1_helper_P4_5_, r1_helper_P1_6_, r1_helper_P2_6_, r1_helper_P3_6_, r1_helper_P4_6_, r2_helper_P1_1_, r2_helper_P2_1_, r2_helper_P3_1_, r2_helper_P4_1_, r2_helper_P1_2_, r2_helper_P2_2_, r2_helper_P3_2_, r2_helper_P4_2_, r2_helper_P1_3_, r2_helper_P2_3_, r2_helper_P3_3_, r2_helper_P4_3_, r2_helper_P1_4_, r2_helper_P2_4_, r2_helper_P3_4_, r2_helper_P4_4_, r2_helper_P1_5_, r2_helper_P2_5_, r2_helper_P3_5_, r2_helper_P4_5_, r2_helper_P1_6_, r2_helper_P2_6_, r2_helper_P3_6_, r2_helper_P4_6_);
end

para noglitch NI PICNIC_OFFLINE
para noglitch NI PICNIC_ONLINE
para noglitch NI PICNIC_MPC
